{"version":3,"sources":["node_modules/browser-pack/_prelude.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/externals/base64.js","node_modules/codem-isoboxer/dist/iso_boxer.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/Debug.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/EventBus.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/FactoryMaker.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/events/CoreEvents.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/events/Events.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/core/events/EventsBase.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/mss/MssFragmentProcessor.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/mss/MssHandler.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/mss/parser/MssParser.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/streaming/MediaPlayerEvents.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/streaming/utils/ErrorHandler.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/streaming/vo/DataChunk.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/streaming/vo/FragmentRequest.js","/Users/dsparaci/Development/projects/dash-client-dev/dash.js/src/streaming/vo/metrics/HTTPRequest.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","MssHandler","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","ISOBoxer","parseBuffer","arrayBuffer","ISOFile","parse","addBoxProcessor","type","parser","ISOBox","prototype","_boxProcessors","createFile","createBox","parent","pos","newBox","create","append","createFullBox","version","flags","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","byteLength","getUint8","utf8ToByteArray","string","TextEncoder","appendBox","box","_offset","_cursor","offset","_root","_raw","_parent","undefined","boxes","index","splice","Cursor","initialOffset","DataView","fetch","result","fetchAll","returnEarly","_sweep","write","getLength","bytes","_rawo","buffer","_parseBox","byteOffset","_boxContainers","_procField","name","size","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","fn","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s1","s2","Math","pow","getUint16","getUint32","str","char","pre","post","data","_incomplete","largesize","indexOf","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","value","setInt8","setInt16","setInt32","floor","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","Array","from","_writeUTF8String","entry_count","nbCompatibleBrands","language","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","range","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","sample","Debug","setup","logToBrowserConsole","showLogTimestamp","startTime","Date","getTime","setLogTimestampVisible","setLogToBrowserConsole","getLogToBrowserConsole","log","message","logTime","apply","arguments","forEach","item","console","eventBus","trigger","_eventsEvents2","LOG","context","_EventBus2","getInstance","instance","__dashjs_factory_name","_FactoryMaker2","getSingletonFactory","EventBus","on","listener","scope","priority","EVENT_PRIORITY_LOW","getHandlerIdx","handlers","handler","callback","inserted","some","idx","off","payload","hasOwnProperty","filter","reset","EVENT_PRIORITY_HIGH","factory","FactoryMaker","extend","childInstance","override","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","obj","setSingletonInstance","getClassFactory","classConstructor","merge","args","extensionObject","extension","prop","extensions","CoreEvents","_EventsBase","_get","Object","getPrototypeOf","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","VIDEO_CHUNK_RECEIVED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","events","EventsBase","config","publicOnly","evt","arrayEqual","arr1","arr2","every","element","saioProcessor","saizProcessor","default_sample_info_size","sencProcessor","NumberOfEntries","clearAndCryptedData","uuidProcessor","tfxdUserType","tfrfUserType","sepiffUserType","usertype","fragment_count","MssFragmentProcessor","createFtypBox","isoFile","ftyp","_codemIsoboxer2","major_brand","minor_version","compatible_brands","createMoovBox","moov","createMvhdBox","trak","createTkhdBox","mdia","createMdhdBox","createHdlrBox","minf","adaptationSet","createVmhdBox","createSmhdBox","dinf","createDrefBox","stbl","stts","stsc","stco","stsz","createStsdBox","mvex","createTrexBox","contentProtection","createProtectionSystemSpecificHeaderBoxForPR","pro","__text","mvhd","creation_time","modification_time","timescale","TIME_SCALE","duration","round","period","rate","volume","reserved1","reserved2","matrix","pre_defined","next_track_ID","trackId","tkhd","track_ID","layer","alternate_group","reserved3","width","representation","height","mdhd","lang","hdlr","handler_type","id","vmhd","graphicsmode","opcolor","smhd","balance","dref","entries","url","location","stsd","createSampleEntry","codec","codecs","substring","createAVCVisualSampleEntry","createMP4AudioSampleEntry","avc1","data_reference_index","pre_defined1","pre_defined2","horizresolution","vertresolution","frame_count","compressorname","depth","pre_defined3","createAVC1ConfigurationRecord","sinf","createOriginalFormatBox","createSchemeTypeBox","createSchemeInformationBox","avcC","avcCLength","sps","pps","AVCProfileIndication","AVCLevelIndication","profile_compatibility","nalus","codecPrivateData","split","slice","naluBytes","naluType","_i","hexStringtoBuffer","NALUTYPE_SPS","NALUTYPE_PPS","set","mp4a","channelcount","audioChannels","samplesize","reserved_3","samplerate","audioSamplingRate","esds","createMPEG4AACESDescriptor","audioSpecificConfig","esdsLength","bandwidth","frma","data_format","stringToCharCode","schm","scheme_type","scheme_version","schi","createTrackEncryptionBox","initData","pssh","uint8arraydecodedPROHeader","_externalsBase642","SystemID","Data","tenc","default_IsEncrypted","default_IV_size","default_KID","trex","default_sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","buf","parseInt","generateMoov","rep","adaptation","mpd","manifest","Period_asArray","AdaptationSet_asArray","ContentProtection","processMoof","response","tfhd","request","mediaInfo","tfdt","traf","baseMediaDecodeTime","trun","tfxd","tfrf","sepiff","saio","saiz","sample_info_size","moof","data_offset","_coreFactoryMaker2","onInitializationRequested","streamProcessor","sender","getStreamProcessor","_streamingVoFragmentRequest2","representationController","getRepresentationController","getCurrentRepresentation","presentationStartTime","mediaType","_streamingVoMetricsHTTPRequest","HTTPRequest","INIT_SEGMENT_TYPE","start","quality","getMediaInfo","representationId","chunk","createDataChunk","getStreamInfo","mssFragmentProcessor","_coreEventsEvents2","fragmentModel","getFragmentModel","streamId","_streamingVoDataChunk2","segmentType","end","onSegmentMediaLoaded","registerEvents","_coreEventBus2","_streamingMediaPlayerEvents2","FRAGMENT_LOADING_COMPLETED","createMssParser","mssParser","_parserMssParser2","_MssFragmentProcessor2","MssParser","mediaPlayerModel","mapPeriod","smoothStreamingMedia","streams","parseFloat","getAttribute","Infinity","TIME_SCALE_100_NANOSECOND_UNIT","getElementsByTagName","mapAdaptationSet","AdaptationSet","streamIndex","representations","segmentTemplate","qualityLevels","segments","contentType","mimeType","mimeTypeMap","subType","maxWidth","maxHeight","mapSegmentTemplate","BaseURL","Id","mapRepresentation","SegmentTemplate","Representation","Representation_asArray","SegmentTimeline","S_asArray","d","qualityLevel","fourCCValue","SUPPORTED_CODECS","toUpperCase","getH264Codec","getAACCodec","toString","nalHeader","avcoti","exec","substr","objectType","samplingRate","codecPrivateDataHex","arr16","indexFreq","extensionSamplingFrequencyIndex","samplingFrequencyIndex","Channels","Uint16Array","setAttribute","mediaUrl","replace","media","mapSegmentTimeline","segmentTimeline","chunks","S","getKIDFromProtectionHeader","protectionHeader","prHeader","wrmHeader","xmlReader","KID","firstChild","getWRMHeaderFromPRHeader","DOMParser","parseFromString","querySelector","textContent","convertUuidEndianness","recordCount","recordType","recordLength","recordValue","subarray","uuid","swapBytes","pos1","pos2","temp","createPRContentProtection","__prefix","schemeIdUri","pro_asArray","processManifest","xmlDoc","manifestLoadedTime","contentProtections","protection","adaptations","realDuration","firstSegment","lastSegment","adaptationTimeOffset","protocol","profiles","timeShiftBufferDepth","mediaPresentationDuration","minBufferTime","getStableBufferTime","availabilityStartTime","Period","ContentProtection_asArray","initialization","max","toFixed","isNaN","parseDOM","errorHandler","manifestError","internalParse","performance","now","xmlParseTime","mss2dashTime","toPrecision","_coreDebug2","_streamingUtilsErrorHandler2","96000","88200","64000","48000","44100","32000","24000","22050","16000","12000","11025","8000","7350","video","audio","text","MediaPlayerEvents","AST_IN_FUTURE","BUFFER_EMPTY","BUFFER_LOADED","BUFFER_LEVEL_STATE_CHANGED","ERROR","FRAGMENT_LOADING_STARTED","FRAGMENT_LOADING_ABANDONED","MANIFEST_LOADED","METRICS_CHANGED","METRIC_CHANGED","METRIC_ADDED","METRIC_UPDATED","PERIOD_SWITCH_COMPLETED","PERIOD_SWITCH_STARTED","QUALITY_CHANGE_REQUESTED","QUALITY_CHANGE_RENDERED","STREAM_INITIALIZED","TEXT_TRACKS_ADDED","TEXT_TRACK_ADDED","CAN_PLAY","PLAYBACK_ENDED","PLAYBACK_ERROR","PLAYBACK_NOT_ALLOWED","PLAYBACK_METADATA_LOADED","PLAYBACK_PAUSED","PLAYBACK_PLAYING","PLAYBACK_PROGRESS","PLAYBACK_RATE_CHANGED","PLAYBACK_SEEKED","PLAYBACK_SEEKING","PLAYBACK_STARTED","PLAYBACK_TIME_UPDATED","mediaPlayerEvents","ErrorHandler","capabilityError","err","error","event","downloadError","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","mediaKeyMessageError","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_CONTENT","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_XLINK","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE","DataChunk","NaN","FragmentRequest","action","ACTION_DOWNLOAD","serviceLocation","requestStartDate","firstByteDate","requestEndDate","availabilityEndTime","wallStartTime","bytesLoaded","bytesTotal","delayLoadingTime","responseType","ACTION_COMPLETE","tcpid","actualurl","trequest","tresponse","responsecode","interval","trace","_stream","_tfinish","_mediaduration","_responseHeaders","_serviceLocation","HTTPRequestTrace","b","MPD_TYPE","XLINK_EXPANSION_TYPE","INDEX_SEGMENT_TYPE","MEDIA_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","OTHER_TYPE"],"mappings":"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","file":"dash.mss.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n}\n","/*! codem-isoboxer v0.3.2 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  var data = new DataView(this._raw.buffer, this._cursor.offset, length);\n  this._cursor.offset += length;\n  return data;\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var data = this._readData();\n  return ISOBoxer.Utils.dataViewToString(data);\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset + 8));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  if (data instanceof Array) {\n    data = new DataView(Uint8Array.from(data).buffer);\n  }\n  if (data instanceof Uint8Array) {\n    data = new DataView(data.buffer);\n  }\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    for (var i = 0; i < data.byteLength; i++) {\n        this._rawo.setUint8(offset + i, data.getUint8(i));\n    }\n    this._cursor.offset += data.byteLength;\n  } else {\n    this.size += data.byteLength;\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1 box\nISOBox.prototype._boxProcessors['avc1'] = ISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // AVCSampleEntry fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  this._procField('scheme_id_uri',            'string', -1);\n  this._procField('value',                    'string', -1);\n  this._procField('timescale',                'uint',   32);\n  this._procField('presentation_time_delta',  'uint',   32);\n  this._procField('event_duration',           'uint',   32);\n  this._procField('id',                       'uint',   32);\n  this._procField('message_data',             'data',   -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\n/**\n * @module Debug\n */\nfunction Debug() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logToBrowserConsole,\n        showLogTimestamp,\n        startTime;\n\n    function setup() {\n        logToBrowserConsole = true;\n        showLogTimestamp = true;\n        startTime = new Date().getTime();\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default false\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n    /**\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogToBrowserConsole(value) {\n        logToBrowserConsole = value;\n    }\n    /**\n     * Use this method to get the state of logToBrowserConsole.\n     * @returns {boolean} The current value of logToBrowserConsole\n     * @memberof module:Debug\n     * @instance\n     */\n    function getLogToBrowserConsole() {\n        return logToBrowserConsole;\n    }\n    /**\n     * This method will allow you send log messages to either the browser's console and/or dispatch an event to capture at the media player level.\n     * @param {...*} arguments The message you want to log. The Arguments object is supported for this method so you can send in comma separated logging items.\n     * @memberof module:Debug\n     * @instance\n     */\n    function log() {\n\n        var message = '';\n        var logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, arguments).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        if (logToBrowserConsole) {\n            console.log(message);\n        }\n\n        eventBus.trigger(Events.LOG, {message: message});\n    }\n\n    instance = {\n        log: log,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setLogToBrowserConsole: setLogToBrowserConsole,\n        getLogToBrowserConsole: getLogToBrowserConsole\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\nexport default FactoryMaker.getSingletonFactory(Debug);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope: scope,\n            priority: priority\n        };\n\n        const inserted = handlers[type].some((item , idx) => {\n            if (item && priority > item.priority ) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) return;\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) return;\n        handlers[type][idx] = null;\n    }\n\n    function trigger(type, payload) {\n        if (!type || !handlers[type]) return;\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\n\n        payload.type = type;\n\n        handlers[type] = handlers[type].filter((item) => item);\n        handlers[type].forEach( handler => handler.callback.call(handler.scope, payload) );\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) return idx;\n\n        handlers[type].some( (item, index) => {\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on: on,\n        off: off,\n        trigger: trigger,\n        reset: reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nexport default factory;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n */\nlet FactoryMaker = (function () {\n\n    let instance;\n    let extensions = [];\n    let singletonContexts = [];\n\n    function extend(name, childInstance, override, context) {\n        let extensionContext = getExtensionContext(context);\n        if (!extensionContext[name] && childInstance) {\n            extensionContext[name] = {instance: childInstance, override: override};\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (let i in singletonContexts) {\n            let obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({ name: className, context: context, instance: instance });\n    }\n\n    function getClassFactory(classConstructor) {\n        return function (context) {\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                create: function () {\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                }\n            };\n        };\n    }\n\n    function getSingletonFactory(classConstructor) {\n        return function (context) {\n            let instance;\n            if (context === undefined) {\n                context = {};\n            }\n            return {\n                getInstance: function () {\n                    // If we don't have an instance yet check for one on the context\n                    if (!instance) {\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                    }\n                    // If there's no instance on the context then create one\n                    if (!instance) {\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\n                    }\n                    return instance;\n                }\n            };\n        };\n    }\n\n    function merge(name, classConstructor, context, args) {\n        let extensionContext = getExtensionContext(context);\n        let extensionObject = extensionContext[name];\n        if (extensionObject) {\n            let extension = extensionObject.instance;\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\n                for (const prop in extension) {\n                    if (classConstructor.hasOwnProperty(prop)) {\n                        classConstructor[prop] = extension[prop];\n                    }\n                }\n            } else { //replace parent object completely with new object. Same as dijon.\n                return extension.apply({ context: context, factory: instance}, args);\n            }\n        }\n        return classConstructor;\n    }\n\n    function getExtensionContext(context) {\n        let extensionContext;\n        extensions.forEach(function (obj) {\n            if (obj === context) {\n                extensionContext = obj;\n            }\n        });\n        if (!extensionContext) {\n            extensionContext = extensions.push(context);\n        }\n        return extensionContext;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        getSingletonFactory: getSingletonFactory,\n        getClassFactory: getClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase';\n\n/**\n * These are internal events that should not be needed at the player level.\n * If you find and event in here that you would like access to from MediaPlayer level\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n        this.BYTES_APPENDED = 'bytesAppended';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_REQUESTED = 'initRequested';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_COMPLETED = 'streamCompleted';\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents';\nclass Events extends CoreEvents {\n}\nlet events = new Events();\nexport default events;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend (events, config) {\n        if (!events) return;\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../core/FactoryMaker';\nimport ISOBoxer from 'codem-isoboxer';\nimport BASE64 from '../../externals/base64';\n\n// Add specific box processors not provided by codem-isoboxer library\n\nfunction arrayEqual(arr1, arr2) {\n    return (arr1.length === arr2.length) && arr1.every(function (element, index) {\n        return element === arr2[index];\n    });\n}\n\nfunction saioProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('entry_count', 'uint', 32);\n    this._procFieldArray('offset', this.entry_count, 'uint', (this.version === 1) ? 64 : 32);\n}\n\nfunction saizProcessor() {\n    this._procFullBox();\n    if (this.flags & 1) {\n        this._procField('aux_info_type', 'uint', 32);\n        this._procField('aux_info_type_parameter', 'uint', 32);\n    }\n    this._procField('default_sample_info_size', 'uint', 8);\n    this._procField('sample_count', 'uint', 32);\n    if (this.default_sample_info_size === 0) {\n        this._procFieldArray('sample_info_size', this.sample_count, 'uint', 8);\n    }\n}\n\nfunction sencProcessor() {\n    this._procFullBox();\n    this._procField('sample_count', 'uint', 32);\n    if (this.flags & 1) {\n        this._procField('IV_size', 'uint', 8);\n    }\n    this._procEntries('entry', this.sample_count, function (entry) {\n        this._procEntryField(entry, 'InitializationVector', 'data', 8);\n        if (this.flags & 2) {\n            this._procEntryField(entry, 'NumberOfEntries', 'uint', 16);\n            this._procSubEntries(entry, 'clearAndCryptedData', entry.NumberOfEntries, function (clearAndCryptedData) {\n                this._procEntryField(clearAndCryptedData, 'BytesOfClearData', 'uint', 16);\n                this._procEntryField(clearAndCryptedData, 'BytesOfEncryptedData', 'uint', 32);\n            });\n        }\n    });\n}\n\nfunction uuidProcessor() {\n    let tfxdUserType =   [0x6D, 0x1D, 0x9B, 0x05, 0x42, 0xD5, 0x44, 0xE6, 0x80, 0xE2, 0x14, 0x1D, 0xAF, 0xF7, 0x57, 0xB2];\n    let tfrfUserType =   [0xD4, 0x80, 0x7E, 0xF2, 0xCA, 0x39, 0x46, 0x95, 0x8E, 0x54, 0x26, 0xCB, 0x9E, 0x46, 0xA7, 0x9F];\n    let sepiffUserType = [0xA2, 0x39, 0x4F, 0x52, 0x5A, 0x9B, 0x4f, 0x14, 0xA2, 0x44, 0x6C, 0x42, 0x7C, 0x64, 0x8D, 0xF4];\n\n    if (arrayEqual(this.usertype, tfxdUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfxd';\n        }\n        this._procField('fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n        this._procField('fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n    }\n\n    if (arrayEqual(this.usertype, tfrfUserType)) {\n        this._procFullBox();\n        if (this._parsing) {\n            this.type = 'tfrf';\n        }\n        this._procField('fragment_count', 'uint', 8);\n        this._procEntries('entry', this.fragment_count, function (entry) {\n            this._procEntryField(entry, 'fragment_absolute_time', 'uint', (this.version === 1) ? 64 : 32);\n            this._procEntryField(entry, 'fragment_duration', 'uint', (this.version === 1) ? 64 : 32);\n        });\n    }\n\n    if (arrayEqual(this.usertype, sepiffUserType)) {\n        if (this._parsing) {\n            this.type = 'sepiff';\n        }\n        sencProcessor.call(this);\n    }\n}\n\nISOBoxer.addBoxProcessor('uuid', uuidProcessor);\nISOBoxer.addBoxProcessor('saio', saioProcessor);\nISOBoxer.addBoxProcessor('saiz', saizProcessor);\nISOBoxer.addBoxProcessor('senc', sencProcessor);\n\n\n\nfunction MssFragmentProcessor() {\n    const TIME_SCALE = 10000000;\n    const NALUTYPE_SPS = 7;\n    const NALUTYPE_PPS = 8;\n\n    let instance,\n        period,\n        adaptationSet,\n        representation,\n        contentProtection,\n        trackId;\n\n    function setup() {}\n\n    function createFtypBox(isoFile) {\n        let ftyp = ISOBoxer.createBox('ftyp', isoFile);\n        ftyp.major_brand = 'iso6';\n        ftyp.minor_version = 1; // is an informative integer for the minor version of the major brand\n        ftyp.compatible_brands = []; //is a list, to the end of the box, of brands isom, iso6 and msdh\n        ftyp.compatible_brands[0] = 'isom'; // => decimal ASCII value for isom\n        ftyp.compatible_brands[1] = 'iso6'; // => decimal ASCII value for iso6\n        ftyp.compatible_brands[2] = 'msdh'; // => decimal ASCII value for msdh\n\n        return ftyp;\n    }\n\n    function createMoovBox(isoFile) {\n\n        // moov box\n        let moov = ISOBoxer.createBox('moov', isoFile);\n\n        // moov/mvhd\n        createMvhdBox(moov);\n\n        // moov/trak\n        let trak = ISOBoxer.createBox('trak', moov);\n\n        // moov/trak/tkhd\n        createTkhdBox(trak);\n\n        // moov/trak/mdia\n        let mdia = ISOBoxer.createBox('mdia', trak);\n\n        // moov/trak/mdia/mdhd\n        createMdhdBox(mdia);\n\n        // moov/trak/mdia/hdlr\n        createHdlrBox(mdia);\n\n        // moov/trak/mdia/minf\n        let minf = ISOBoxer.createBox('minf', mdia);\n\n        switch (adaptationSet.type) {\n            case 'video':\n                // moov/trak/mdia/minf/vmhd\n                createVmhdBox(minf);\n                break;\n            case 'audio':\n                // moov/trak/mdia/minf/smhd\n                createSmhdBox(minf);\n                break;\n            default:\n                break;\n        }\n\n        // moov/trak/mdia/minf/dinf\n        let dinf = ISOBoxer.createBox('dinf', minf);\n\n        // moov/trak/mdia/minf/dinf/dref\n        createDrefBox(dinf);\n\n        // moov/trak/mdia/minf/stbl\n        let stbl = ISOBoxer.createBox('stbl', minf);\n\n        // Create empty stts, stsc, stco and stsz boxes\n        // Use data field as for codem-isoboxer unknown boxes for setting fields value\n\n        // moov/trak/mdia/minf/stbl/stts\n        let stts = ISOBoxer.createFullBox('stts', stbl);\n        stts._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsc\n        let stsc = ISOBoxer.createFullBox('stsc', stbl);\n        stsc._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stco\n        let stco = ISOBoxer.createFullBox('stco', stbl);\n        stco._data = [0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, entry_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsz\n        let stsz = ISOBoxer.createFullBox('stsz', stbl);\n        stsz._data = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // version = 0, flags = 0, sample_size = 0, sample_count = 0\n\n        // moov/trak/mdia/minf/stbl/stsd\n        createStsdBox(stbl);\n\n        // moov/mvex\n        let mvex = ISOBoxer.createBox('mvex', moov);\n\n        // moov/mvex/trex\n        createTrexBox(mvex);\n\n        if (contentProtection) {\n            createProtectionSystemSpecificHeaderBoxForPR(moov, contentProtection[0].pro.__text);\n        }\n    }\n\n    function createMvhdBox(moov) {\n\n        let mvhd = ISOBoxer.createFullBox('mvhd', moov);\n\n        mvhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mvhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mvhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mvhd.timescale = TIME_SCALE; // the time-scale for the entire presentation => 10000000 for MSS\n        mvhd.duration = Math.round(period.duration * TIME_SCALE); // the length of the presentation (in the indicated timescale) =>  take duration of period\n        mvhd.rate = 1.0; // 16.16 number, '1.0' = normal playback\n        mvhd.volume = 1.0; // 8.8 number, '1.0' = full volume\n        mvhd.reserved1 = 0;\n        mvhd.reserved2 = [0x0, 0x0];\n        mvhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        mvhd.pre_defined = [0, 0, 0, 0, 0, 0];\n        mvhd.next_track_ID = trackId + 1; // indicates a value to use for the track ID of the next track to be added to this presentation\n\n        return mvhd;\n    }\n\n    function createTkhdBox(trak) {\n\n        let tkhd = ISOBoxer.createFullBox('tkhd', trak);\n\n        tkhd.version = 1; // version = 1  in order to have 64bits duration value\n        tkhd.flags = 0x1 | // Track_enabled (0x000001): Indicates that the track is enabled\n            0x2 | // Track_in_movie (0x000002):  Indicates that the track is used in the presentation\n            0x4; // Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation\n\n        tkhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        tkhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        tkhd.track_ID = trackId; // uniquely identifies this track over the entire life-time of this presentation\n        tkhd.reserved1 = 0;\n        tkhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period\n        tkhd.reserved2 = [0x0, 0x0];\n        tkhd.layer = 0; // specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track\n        tkhd.alternate_group = 0; // specifies a group or collection of tracks => ignore\n        tkhd.volume = 1.0; // '1.0' = full volume\n        tkhd.reserved3 = 0;\n        tkhd.matrix = [\n            1, 0, 0, // provides a transformation matrix for the video;\n            0, 1, 0, // (u,v,w) are restricted here to (0,0,1)\n            0, 0, 16384\n        ];\n        tkhd.width = representation.width; // visual presentation width\n        tkhd.height = representation.height; // visual presentation height\n\n        return tkhd;\n    }\n\n    function createMdhdBox(mdia) {\n\n        let mdhd = ISOBoxer.createFullBox('mdhd', mdia);\n\n        mdhd.version = 1; // version = 1  in order to have 64bits duration value\n\n        mdhd.creation_time = 0; // the creation time of the presentation => ignore (set to 0)\n        mdhd.modification_time = 0; // the most recent time the presentation was modified => ignore (set to 0)\n        mdhd.timescale = TIME_SCALE; // the time-scale for the entire presentation\n        mdhd.duration = Math.round(period.duration * TIME_SCALE); // the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.\n        mdhd.language = adaptationSet.lang || 'und'; // declares the language code for this media (see getLanguageCode())\n        mdhd.pre_defined = 0;\n\n        return mdhd;\n    }\n\n    function createHdlrBox(mdia) {\n\n        let hdlr = ISOBoxer.createFullBox('hdlr', mdia);\n\n        hdlr.pre_defined = 0;\n        switch (adaptationSet.type) {\n            case 'video':\n                hdlr.handler_type = 'vide';\n                break;\n            case 'audio':\n                hdlr.handler_type = 'soun';\n                break;\n            default:\n                hdlr.handler_type = 'meta';\n                break;\n        }\n        hdlr.name = representation.id;\n        hdlr.reserved = [0, 0, 0];\n\n        return hdlr;\n    }\n\n    function createVmhdBox(minf) {\n\n        let vmhd = ISOBoxer.createFullBox('vmhd', minf);\n\n        vmhd.flags = 1;\n\n        vmhd.graphicsmode = 0; // specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image\n        vmhd.opcolor = [0, 0, 0]; // is a set of 3 colour values (red, green, blue) available for use by graphics modes\n\n        return vmhd;\n    }\n\n    function createSmhdBox(minf) {\n\n        let smhd = ISOBoxer.createFullBox('smhd', minf);\n\n        smhd.flags = 1;\n\n        smhd.balance = 0; // is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.\n        smhd.reserved = 0;\n\n        return smhd;\n    }\n\n    function createDrefBox(dinf) {\n\n        let dref = ISOBoxer.createFullBox('dref', dinf);\n\n        dref.entry_count = 1;\n        dref.entries = [];\n\n        let url = ISOBoxer.createFullBox('url ', dref, false);\n        url.location = '';\n        url.flags = 1;\n\n        dref.entries.push(url);\n\n        return dref;\n    }\n\n    function createStsdBox(stbl) {\n\n        let stsd = ISOBoxer.createFullBox('stsd', stbl);\n\n        stsd.entries = [];\n        switch (adaptationSet.type) {\n            case 'video':\n            case 'audio':\n                stsd.entries.push(createSampleEntry(stsd));\n                break;\n            default:\n                break;\n        }\n\n        stsd.entry_count = stsd.entries.length; // is an integer that counts the actual entries\n        return stsd;\n    }\n\n    function createSampleEntry(stsd) {\n        let codec = representation.codecs.substring(0, representation.codecs.indexOf('.'));\n\n        switch (codec) {\n            case 'avc1':\n                return createAVCVisualSampleEntry(stsd, codec);\n            case 'mp4a':\n                return createMP4AudioSampleEntry(stsd, codec);\n            default:\n                throw {\n                    name: 'Unsupported codec',\n                    message: 'Unsupported codec',\n                    data: {\n                        codec: codec\n                    }\n                };\n        }\n    }\n\n    function createAVCVisualSampleEntry(stsd, codec) {\n        let avc1;\n\n        if (contentProtection) {\n            avc1 = ISOBoxer.createBox('encv', stsd, false);\n        } else {\n            avc1 = ISOBoxer.createBox('avc1', stsd, false);\n        }\n\n        // SampleEntry fields\n        avc1.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        avc1.data_reference_index = 1;\n\n        // VisualSampleEntry fields\n        avc1.pre_defined1 = 0;\n        avc1.reserved2 = 0;\n        avc1.pre_defined2 = [0, 0, 0];\n        avc1.height = representation.height;\n        avc1.width = representation.width;\n        avc1.horizresolution = 72; // 72 dpi\n        avc1.vertresolution = 72; // 72 dpi\n        avc1.reserved3 = 0;\n        avc1.frame_count = 1; // 1 compressed video frame per sample\n        avc1.compressorname = [\n            0x0A, 0x41, 0x56, 0x43, 0x20, 0x43, 0x6F, 0x64, // = 'AVC Coding';\n            0x69, 0x6E, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n        ];\n        avc1.depth = 0x0018; // 0x0018 – images are in colour with no alpha.\n        avc1.pre_defined3 = 65535;\n        avc1.config = createAVC1ConfigurationRecord();\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', avc1);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return avc1;\n    }\n\n    function createAVC1ConfigurationRecord() {\n\n        let avcC = null;\n        let avcCLength = 15; // length = 15 by default (0 SPS and 0 PPS)\n\n        // First get all SPS and PPS from codecPrivateData\n        let sps = [];\n        let pps = [];\n        let AVCProfileIndication = 0;\n        let AVCLevelIndication = 0;\n        let profile_compatibility = 0;\n\n\n        let nalus = representation.codecPrivateData.split('00000001').slice(1);\n        let naluBytes, naluType;\n\n        for (let i = 0; i < nalus.length; i++) {\n            naluBytes = hexStringtoBuffer(nalus[i]);\n\n            naluType = naluBytes[0] & 0x1F;\n\n            switch (naluType) {\n                case NALUTYPE_SPS:\n                    sps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = sequenceParameterSetLength field length\n                    break;\n                case NALUTYPE_PPS:\n                    pps.push(naluBytes);\n                    avcCLength += naluBytes.length + 2; // 2 = pictureParameterSetLength field length\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get profile and level from SPS\n        if (sps.length > 0) {\n            AVCProfileIndication = sps[0][1];\n            profile_compatibility = sps[0][2];\n            AVCLevelIndication = sps[0][3];\n        }\n\n        // Generate avcC buffer\n        avcC = new Uint8Array(avcCLength);\n\n        let i = 0;\n        // length\n        avcC[i++] = (avcCLength & 0xFF000000) >> 24;\n        avcC[i++] = (avcCLength & 0x00FF0000) >> 16;\n        avcC[i++] = (avcCLength & 0x0000FF00) >> 8;\n        avcC[i++] = (avcCLength & 0x000000FF);\n        avcC.set([0x61, 0x76, 0x63, 0x43], i); // type = 'avcC'\n        i += 4;\n        avcC[i++] = 1; // configurationVersion = 1\n        avcC[i++] = AVCProfileIndication;\n        avcC[i++] = profile_compatibility;\n        avcC[i++] = AVCLevelIndication;\n        avcC[i++] = 0xFF; // '11111' + lengthSizeMinusOne = 3\n        avcC[i++] = 0xE0 | sps.length; // '111' + numOfSequenceParameterSets\n        for (let n = 0; n < sps.length; n++) {\n            avcC[i++] = (sps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (sps[n].length & 0x00FF);\n            avcC.set(sps[n], i);\n            i += sps[n].length;\n        }\n        avcC[i++] = pps.length; // numOfPictureParameterSets\n        for (let n = 0; n < pps.length; n++) {\n            avcC[i++] = (pps[n].length & 0xFF00) >> 8;\n            avcC[i++] = (pps[n].length & 0x00FF);\n            avcC.set(pps[n], i);\n            i += pps[n].length;\n        }\n\n        return avcC;\n    }\n\n    function createMP4AudioSampleEntry(stsd, codec) {\n        let mp4a;\n\n        if (contentProtection) {\n            mp4a = ISOBoxer.createBox('enca', stsd, false);\n        } else {\n            mp4a = ISOBoxer.createBox('mp4a', stsd, false);\n        }\n\n        // SampleEntry fields\n        mp4a.reserved1 = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n        mp4a.data_reference_index = 1;\n\n        // AudioSampleEntry fields\n        mp4a.reserved2 = [0x0, 0x0];\n        mp4a.channelcount = representation.audioChannels;\n        mp4a.samplesize = 16;\n        mp4a.pre_defined = 0;\n        mp4a.reserved_3 = 0;\n        mp4a.samplerate = representation.audioSamplingRate << 16;\n\n        mp4a.esds = createMPEG4AACESDescriptor();\n\n        if (contentProtection) {\n            // Create and add Protection Scheme Info Box\n            let sinf = ISOBoxer.createBox('sinf', mp4a);\n\n            // Create and add Original Format Box => indicate codec type of the encrypted content\n            createOriginalFormatBox(sinf, codec);\n\n            // Create and add Scheme Type box\n            createSchemeTypeBox(sinf);\n\n            // Create and add Scheme Information Box\n            createSchemeInformationBox(sinf);\n        }\n\n        return mp4a;\n    }\n\n    function createMPEG4AACESDescriptor() {\n\n        // AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field\n        let audioSpecificConfig = hexStringtoBuffer(representation.codecPrivateData);\n\n        // ESDS length = esds box header length (= 12) +\n        //               ES_Descriptor header length (= 5) +\n        //               DecoderConfigDescriptor header length (= 15) +\n        //               decoderSpecificInfo header length (= 2) +\n        //               AudioSpecificConfig length (= codecPrivateData length)\n        let esdsLength = 34 + audioSpecificConfig.length;\n        let esds = new Uint8Array(esdsLength);\n\n        let i = 0;\n        // esds box\n        esds[i++] = (esdsLength & 0xFF000000) >> 24; // esds box length\n        esds[i++] = (esdsLength & 0x00FF0000) >> 16; // ''\n        esds[i++] = (esdsLength & 0x0000FF00) >> 8; // ''\n        esds[i++] = (esdsLength & 0x000000FF); // ''\n        esds.set([0x65, 0x73, 0x64, 0x73], i); // type = 'esds'\n        i += 4;\n        esds.set([0, 0, 0, 0], i); // version = 0, flags = 0\n        i += 4;\n        // ES_Descriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x03; // tag = 0x03 (ES_DescrTag)\n        esds[i++] = 20 + audioSpecificConfig.length; // size\n        esds[i++] = (trackId & 0xFF00) >> 8; // ES_ID = track_id\n        esds[i++] = (trackId & 0x00FF); // ''\n        esds[i++] = 0; // flags and streamPriority\n\n        // DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x04; // tag = 0x04 (DecoderConfigDescrTag)\n        esds[i++] = 15 + audioSpecificConfig.length; // size\n        esds[i++] = 0x40; // objectTypeIndication = 0x40 (MPEG-4 AAC)\n        esds[i] = 0x05 << 2; // streamType = 0x05 (Audiostream)\n        esds[i] |= 0 << 1; // upStream = 0\n        esds[i++] |= 1; // reserved = 1\n        esds[i++] = 0xFF; // buffersizeDB = undefined\n        esds[i++] = 0xFF; // ''\n        esds[i++] = 0xFF; // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // maxBitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n        esds[i++] = (representation.bandwidth & 0xFF000000) >> 24; // avgbitrate\n        esds[i++] = (representation.bandwidth & 0x00FF0000) >> 16; // ''\n        esds[i++] = (representation.bandwidth & 0x0000FF00) >> 8; // ''\n        esds[i++] = (representation.bandwidth & 0x000000FF); // ''\n\n        // DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))\n        esds[i++] = 0x05; // tag = 0x05 (DecSpecificInfoTag)\n        esds[i++] = audioSpecificConfig.length; // size\n        esds.set(audioSpecificConfig, i); // AudioSpecificConfig bytes\n\n        return esds;\n    }\n\n    function createOriginalFormatBox(sinf, codec) {\n        let frma = ISOBoxer.createBox('frma', sinf);\n        frma.data_format = stringToCharCode(codec);\n    }\n\n    function createSchemeTypeBox(sinf) {\n        let schm = ISOBoxer.createFullBox('schm', sinf);\n\n        schm.flags = 0;\n        schm.version = 0;\n        schm.scheme_type = 0x63656E63; // 'cenc' => common encryption\n        schm.scheme_version = 0x00010000; // version set to 0x00010000 (Major version 1, Minor version 0)\n    }\n\n    function createSchemeInformationBox(sinf) {\n        let schi = ISOBoxer.createBox('schi', sinf);\n\n        // Create and add Track Encryption Box\n        createTrackEncryptionBox(schi);\n    }\n\n    function createProtectionSystemSpecificHeaderBoxForPR(moov, initData) {\n        let pssh = ISOBoxer.createFullBox('pssh', moov);\n        let uint8arraydecodedPROHeader = BASE64.decodeArray(initData);\n\n        pssh.flags = 0;\n        pssh.version = 0;\n        pssh.SystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]); //PlayReady System ID\n\n        pssh.DataSize = uint8arraydecodedPROHeader.length;\n        pssh.Data = uint8arraydecodedPROHeader;\n    }\n\n    function createTrackEncryptionBox(schi) {\n        var tenc = ISOBoxer.createFullBox('tenc', schi);\n\n        tenc.flags = 0;\n        tenc.version = 0;\n\n        tenc.default_IsEncrypted = 0x1;\n        tenc.default_IV_size = 8;\n        tenc.default_KID = (contentProtection && (contentProtection.length) > 0 && contentProtection[0]['cenc:default_KID']) ?\n            contentProtection[0]['cenc:default_KID'] :\n            [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0];\n    }\n\n    function createTrexBox(moov) {\n\n        let trex = ISOBoxer.createFullBox('trex', moov);\n\n        trex.track_ID = trackId;\n        trex.default_sample_description_index = 1;\n        trex.default_sample_duration = 0;\n        trex.default_sample_size = 0;\n        trex.default_sample_flags = 0;\n\n        return trex;\n    }\n\n    function hexStringtoBuffer(str) {\n        let buf = new Uint8Array(str.length / 2);\n        let i;\n\n        for (i = 0; i < str.length / 2; i += 1) {\n            buf[i] = parseInt('' + str[i * 2] + str[i * 2 + 1], 16);\n        }\n        return buf;\n    }\n\n    function stringToCharCode(str) {\n        let code = 0;\n        let i;\n\n        for (i = 0; i < str.length; i += 1) {\n            code |= str.charCodeAt(i) << ((str.length - i - 1) * 8);\n        }\n        return code;\n    }\n\n    function generateMoov(rep) {\n\n        let isoFile,\n            arrayBuffer;\n\n        representation = rep;\n        adaptationSet = representation.adaptation;\n\n        period = adaptationSet.period;\n        trackId = adaptationSet.index + 1;\n        contentProtection = period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;\n\n        isoFile = ISOBoxer.createFile();\n        createFtypBox(isoFile);\n        createMoovBox(isoFile);\n\n        arrayBuffer = isoFile.write();\n\n        return arrayBuffer;\n    }\n\n    function processMoof(e) {\n        let i;\n        // e.request contains request description object\n        // e.response contains fragment bytes\n        let isoFile = ISOBoxer.parseBuffer(e.response);\n        // Update track_Id in tfhd box\n        let tfhd = isoFile.fetch('tfhd');\n        tfhd.track_ID = e.request.mediaInfo.index + 1;\n\n        // Add tfdt box\n        let tfdt = isoFile.fetch('tfdt');\n        let traf = isoFile.fetch('traf');\n        if (tfdt === null) {\n            tfdt = ISOBoxer.createFullBox('tfdt', traf, tfhd);\n            tfdt.version = 1;\n            tfdt.flags = 0;\n            tfdt.baseMediaDecodeTime = Math.floor(e.request.startTime * e.request.timescale);\n        }\n\n        let trun = isoFile.fetch('trun');\n\n        // Process tfxd boxes\n        // This box provide absolute timestamp but we take the segment start time for tfdt\n        let tfxd = isoFile.fetch('tfxd');\n        if (tfxd) {\n            tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd), 1);\n            tfxd = null;\n        }\n        let tfrf = isoFile.fetch('tfrf');\n        if (tfrf) {\n            tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf), 1);\n            tfrf = null;\n        }\n\n        // If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)\n        // => convert sepiff box it into a senc box\n        // => create saio and saiz boxes (if not already present)\n        let sepiff = isoFile.fetch('sepiff');\n        if (sepiff !== null) {\n            sepiff.type = 'senc';\n            sepiff.usertype = undefined;\n\n            let saio = isoFile.fetch('saio');\n            if (saio === null) {\n                // Create Sample Auxiliary Information Offsets Box box (saio)\n                saio = ISOBoxer.createFullBox('saio', traf);\n                saio.version = 0;\n                saio.flags = 0;\n                saio.entry_count = 1;\n                saio.offset = [];\n\n                let saiz = ISOBoxer.createFullBox('saiz', traf);\n                saiz.version = 0;\n                saiz.flags = 0;\n                saiz.sample_count = sepiff.sample_count;\n                saiz.default_sample_info_size = 0;\n                saiz.sample_info_size = [];\n\n                if (sepiff.flags & 0x02) {\n                    // Sub-sample encryption => set sample_info_size for each sample\n                    for (i = 0; i < sepiff.sample_count; i += 1) {\n                        // 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)\n                        // 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)\n                        saiz.sample_info_size[i] = 10 + (6 * sepiff.entry[i].NumberOfEntries);\n                    }\n                } else {\n                    // No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)\n                    saiz.default_sample_info_size = 8;\n                }\n            }\n        }\n\n        tfhd.flags &= 16777214; // set tfhd.base-data-offset-present to false\n        tfhd.flags |= 131072; // set tfhd.default-base-is-moof to true\n        trun.flags |= 1; // set trun.data-offset-present to true\n\n        let moof = isoFile.fetch('moof');\n\n        let length = moof.getLength();\n        //offset is equal to length of the moof box + size and type definition for mdat box.\n        trun.data_offset = length + 8;\n\n        e.response = isoFile.write();\n    }\n\n    instance = {\n        generateMoov: generateMoov,\n        processMoof: processMoof\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssFragmentProcessor.__dashjs_factory_name = 'MssFragmentProcessor';\nexport default FactoryMaker.getClassFactory(MssFragmentProcessor);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Events from '../core/events/Events';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents';\nimport EventBus from '../core/EventBus';\nimport FactoryMaker from '../core/FactoryMaker';\nimport DataChunk from '../streaming/vo/DataChunk';\nimport FragmentRequest from '../streaming/vo/FragmentRequest';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest';\nimport MssFragmentProcessor from './MssFragmentProcessor';\nimport MssParser from './parser/MssParser';\n\nfunction MssHandler(config) {\n\n    let context = this.context;\n    let eventBus = config.eventBus;\n    let mssFragmentProcessor = MssFragmentProcessor(context).create();\n    let mssParser;\n\n    let instance;\n\n    function setup() {\n    }\n\n    function onInitializationRequested(e) {\n        let streamProcessor = e.sender.getStreamProcessor();\n        let request = new FragmentRequest();\n        let representationController = streamProcessor.getRepresentationController();\n        let representation = representationController.getCurrentRepresentation();\n        let period,\n            presentationStartTime;\n\n        period = representation.adaptation.period;\n\n        request.mediaType = representation.adaptation.type;\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\n        request.range = representation.range;\n        presentationStartTime = period.start;\n        //request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation.adaptation.period.mpd, isDynamic);\n        //request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, period.mpd, isDynamic);\n        request.quality = representation.index;\n        request.mediaInfo = streamProcessor.getMediaInfo();\n        request.representationId = representation.id;\n\n        const chunk = createDataChunk(request, streamProcessor.getStreamInfo().id);\n\n        // Generate initialization segment (moov)\n        chunk.bytes = mssFragmentProcessor.generateMoov(representation);\n\n        eventBus.trigger(Events.INIT_FRAGMENT_LOADED, {chunk: chunk, fragmentModel: streamProcessor.getFragmentModel()});\n\n        // Change the sender value to stop event to be propagated\n        e.sender = null;\n    }\n\n    function createDataChunk(request, streamId) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.mediaInfo = request.mediaInfo;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representationId = request.representationId;\n\n        return chunk;\n    }\n\n\n    function onSegmentMediaLoaded(e) {\n        // Process moof to transcode it from MSS to DASH\n        mssFragmentProcessor.processMoof(e);\n    }\n\n    function registerEvents() {\n        eventBus.on(Events.INIT_REQUESTED, onInitializationRequested, instance, EventBus.EVENT_PRIORITY_HIGH);\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, instance, EventBus.EVENT_PRIORITY_HIGH);\n    }\n\n    function reset() {\n        eventBus.off(Events.INIT_REQUESTED, onInitializationRequested, this);\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onSegmentMediaLoaded, this);\n    }\n\n    function createMssParser() {\n        mssParser = MssParser(context).create(config);\n        return mssParser;\n    }\n\n    instance = {\n        reset: reset,\n        createMssParser: createMssParser,\n        registerEvents: registerEvents\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssHandler.__dashjs_factory_name = 'MssHandler';\nlet factory = FactoryMaker.getClassFactory(MssHandler);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\nimport ErrorHandler from '../../streaming/utils/ErrorHandler';\nimport BASE64 from '../../../externals/base64';\n\nfunction MssParser(config) {\n\n    const context = this.context;\n    const log = Debug(context).getInstance().log;\n    const errorHandler = ErrorHandler(context).getInstance();\n\n    const TIME_SCALE_100_NANOSECOND_UNIT = 10000000.0;\n    const SUPPORTED_CODECS = ['AAC', 'AACL', 'AVC1', 'H264', 'TTML', 'DFXP'];\n    const samplingFrequencyIndex = {\n            96000: 0x0,\n            88200: 0x1,\n            64000: 0x2,\n            48000: 0x3,\n            44100: 0x4,\n            32000: 0x5,\n            24000: 0x6,\n            22050: 0x7,\n            16000: 0x8,\n            12000: 0x9,\n            11025: 0xA,\n            8000: 0xB,\n            7350: 0xC\n        };\n    const mimeTypeMap = {\n            'video': 'video/mp4',\n            'audio': 'audio/mp4',\n            'text': 'application/mp4'\n        };\n\n    let instance,\n        mediaPlayerModel;\n\n\n    function setup() {\n        mediaPlayerModel = config.mediaPlayerModel;\n    }\n\n    function mapPeriod(smoothStreamingMedia) {\n        let period = {};\n        let streams,\n            adaptation;\n\n        period.duration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n\n        // For each StreamIndex node, create an AdaptationSet element\n        period.AdaptationSet_asArray = [];\n        streams = smoothStreamingMedia.getElementsByTagName('StreamIndex');\n        for (let i = 0; i < streams.length; i++) {\n            adaptation = mapAdaptationSet(streams[i]);\n            if (adaptation !== null) {\n                period.AdaptationSet_asArray.push(adaptation);\n            }\n        }\n\n        if (period.AdaptationSet_asArray.length > 0) {\n            period.AdaptationSet = (period.AdaptationSet_asArray.length > 1) ? period.AdaptationSet_asArray : period.AdaptationSet_asArray[0];\n        }\n\n        return period;\n    }\n\n    function mapAdaptationSet(streamIndex) {\n\n        let adaptationSet = {};\n        let representations = [];\n        let segmentTemplate = {};\n        let qualityLevels,\n            representation,\n            segments,\n            range,\n            i;\n\n        adaptationSet.id = streamIndex.getAttribute('Name');\n        adaptationSet.contentType = streamIndex.getAttribute('Type');\n        adaptationSet.lang = streamIndex.getAttribute('Language') || 'und';\n        adaptationSet.mimeType = mimeTypeMap[adaptationSet.contentType];\n        adaptationSet.subType = streamIndex.getAttribute('Subtype');\n        adaptationSet.maxWidth = streamIndex.getAttribute('MaxWidth');\n        adaptationSet.maxHeight = streamIndex.getAttribute('MaxHeight');\n\n        // Create a SegmentTemplate with a SegmentTimeline\n        segmentTemplate = mapSegmentTemplate(streamIndex);\n\n        qualityLevels = streamIndex.getElementsByTagName('QualityLevel');\n        // For each QualityLevel node, create a Representation element\n        for (i = 0; i < qualityLevels.length; i++) {\n            // Propagate BaseURL and mimeType\n            qualityLevels[i].BaseURL = adaptationSet.BaseURL;\n            qualityLevels[i].mimeType = adaptationSet.mimeType;\n\n            // Set quality level id\n            qualityLevels[i].Id = adaptationSet.id + '_' + qualityLevels[i].getAttribute('Index');\n\n            // Map Representation to QualityLevel\n            representation = mapRepresentation(qualityLevels[i], streamIndex);\n\n            if (representation !== null) {\n                // Copy SegmentTemplate into Representation\n                representation.SegmentTemplate = segmentTemplate;\n\n                representations.push(representation);\n            }\n        }\n\n        if (representations.length === 0) {\n            return null;\n        }\n\n        adaptationSet.Representation = (representations.length > 1) ? representations : representations[0];\n        adaptationSet.Representation_asArray = representations;\n\n        // Set SegmentTemplate\n        adaptationSet.SegmentTemplate = segmentTemplate;\n\n        segments = segmentTemplate.SegmentTimeline.S_asArray;\n\n        range = {\n            start: segments[0].t / segmentTemplate.timescale,\n            end: (segments[segments.length - 1].t + segments[segments.length - 1].d) / segmentTemplate.timescale\n        };\n\n        return adaptationSet;\n    }\n\n    function mapRepresentation(qualityLevel, streamIndex) {\n\n        let representation = {};\n        let fourCCValue = null;\n\n        representation.id = qualityLevel.Id;\n        representation.bandwidth = parseInt(qualityLevel.getAttribute('Bitrate'), 10);\n        representation.mimeType = qualityLevel.mimeType;\n        representation.width = parseInt(qualityLevel.getAttribute('MaxWidth'), 10);\n        representation.height = parseInt(qualityLevel.getAttribute('MaxHeight'), 10);\n\n        fourCCValue = qualityLevel.getAttribute('FourCC');\n\n        // If FourCC not defined at QualityLevel level, then get it from StreamIndex level\n        if (fourCCValue === null) {\n            fourCCValue = streamIndex.getAttribute('FourCC');\n        }\n\n        // If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),\n        // then we consider the stream is an audio AAC stream\n        if (fourCCValue === null) {\n            fourCCValue = 'AAC';\n        }\n\n        // Check if codec is supported\n        if (SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase()) === -1) {\n            // Do not send warning\n            //this.errHandler.sendWarning(MediaPlayer.dependencies.ErrorHandler.prototype.MEDIA_ERR_CODEC_UNSUPPORTED, \"Codec not supported\", {codec: fourCCValue});\n            log('[MssParser] Codec not supported: ' + fourCCValue);\n            return null;\n        }\n\n        // Get codecs value according to FourCC field\n        if (fourCCValue === 'H264' || fourCCValue === 'AVC1') {\n            representation.codecs = getH264Codec(qualityLevel);\n        } else if (fourCCValue.indexOf('AAC') >= 0) {\n            representation.codecs = getAACCodec(qualityLevel, fourCCValue);\n            representation.audioSamplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n            representation.audioChannels = parseInt(qualityLevel.getAttribute('Channels'), 10);\n        } else if (fourCCValue.indexOf('TTML') || fourCCValue.indexOf('DFXP')) {\n            representation.codecs = 'stpp';\n        }\n\n        representation.codecPrivateData = '' + qualityLevel.getAttribute('CodecPrivateData');\n        representation.BaseURL = qualityLevel.BaseURL;\n\n        return representation;\n    }\n\n    function getH264Codec(qualityLevel) {\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let nalHeader,\n            avcoti;\n\n\n        // Extract from the CodecPrivateData field the hexadecimal representation of the following\n        // three bytes in the sequence parameter set NAL unit.\n        // => Find the SPS nal header\n        nalHeader = /00000001[0-9]7/.exec(codecPrivateData);\n        // => Find the 6 characters after the SPS nalHeader (if it exists)\n        avcoti = nalHeader && nalHeader[0] ? (codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0]) + 10, 6)) : undefined;\n\n        return 'avc1.' + avcoti;\n    }\n\n    function getAACCodec(qualityLevel, fourCCValue) {\n        let objectType = 0;\n        let codecPrivateData = qualityLevel.getAttribute('CodecPrivateData').toString();\n        let samplingRate = parseInt(qualityLevel.getAttribute('SamplingRate'), 10);\n        let codecPrivateDataHex,\n            arr16,\n            indexFreq,\n            extensionSamplingFrequencyIndex;\n\n        //chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC\n        //set objectType to 5 => strange, it should be 2\n        if (fourCCValue === 'AACH') {\n            objectType = 0x05;\n        }\n        //if codecPrivateData is empty, build it :\n        if (codecPrivateData === undefined || codecPrivateData === '') {\n            objectType = 0x02; //AAC Main Low Complexity => object Type = 2\n            indexFreq = samplingFrequencyIndex[samplingRate];\n            if (fourCCValue === 'AACH') {\n                // 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'\n                objectType = 0x05; // High Efficiency AAC Profile = object Type = 5 SBR\n                codecPrivateData = new Uint8Array(4);\n                extensionSamplingFrequencyIndex = samplingFrequencyIndex[samplingRate * 2]; // in HE AAC Extension Sampling frequence\n                // equals to SamplingRate*2\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (qualityLevel.Channels << 3) | (extensionSamplingFrequencyIndex >> 1);\n                codecPrivateData[2] = (extensionSamplingFrequencyIndex << 7) | (0x02 << 2); // origin object type equals to 2 => AAC Main Low Complexity\n                codecPrivateData[3] = 0x0; //alignment bits\n\n                arr16 = new Uint16Array(2);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                arr16[1] = (codecPrivateData[2] << 8) + codecPrivateData[3];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n                codecPrivateDataHex = arr16[0].toString(16) + arr16[1].toString(16);\n\n            } else {\n                // 2 bytes :     XXXXX         XXXX          XXXX              XXX\n                //           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'\n                codecPrivateData = new Uint8Array(2);\n                //Freq Index is present for 3 bits in the first byte, last bit is in the second\n                codecPrivateData[0] = (objectType << 3) | (indexFreq >> 1);\n                codecPrivateData[1] = (indexFreq << 7) | (parseInt(qualityLevel.getAttribute('Channels'), 10) << 3);\n                // put the 2 bytes in an 16 bits array\n                arr16 = new Uint16Array(1);\n                arr16[0] = (codecPrivateData[0] << 8) + codecPrivateData[1];\n                //convert decimal to hex value\n                codecPrivateDataHex = arr16[0].toString(16);\n            }\n\n            codecPrivateData = '' + codecPrivateDataHex;\n            codecPrivateData = codecPrivateData.toUpperCase();\n            qualityLevel.setAttribute('CodecPrivateData', codecPrivateData);\n        } else if (objectType === 0) {\n            objectType = (parseInt(codecPrivateData.substr(0, 2), 16) & 0xF8) >> 3;\n        }\n\n        return 'mp4a.40.' + objectType;\n    }\n\n    function mapSegmentTemplate(streamIndex) {\n\n        let segmentTemplate = {};\n        let mediaUrl;\n\n        mediaUrl = streamIndex.getAttribute('Url').replace('{bitrate}', '$Bandwidth$');\n        mediaUrl = mediaUrl.replace('{start time}', '$Time$');\n\n        segmentTemplate.media = mediaUrl;\n        segmentTemplate.timescale = TIME_SCALE_100_NANOSECOND_UNIT;\n\n        segmentTemplate.SegmentTimeline = mapSegmentTimeline(streamIndex);\n\n        return segmentTemplate;\n    }\n\n    function mapSegmentTimeline(streamIndex) {\n\n        let segmentTimeline = {};\n        let chunks = streamIndex.getElementsByTagName('c');\n        let segments = [];\n        let i,\n            t, d;\n\n        for (i = 0; i < chunks.length; i++) {\n            // Get time and duration attributes\n            t = parseFloat(chunks[i].getAttribute('t'));\n            d = parseFloat(chunks[i].getAttribute('d'));\n\n            if ((i === 0) && !t) {\n                t = 0;\n            }\n\n            if (i > 0) {\n                // Update previous segment duration if not defined\n                if (!segments[segments.length - 1].d) {\n                    segments[segments.length - 1].d = t - segments[segments.length - 1].t;\n                }\n                // Set segment absolute timestamp if not set\n                if (!t) {\n                    t = segments[segments.length - 1].t + segments[segments.length - 1].d;\n                }\n            }\n\n            // Create new segment\n            segments.push({\n                d: d,\n                t: t\n            });\n\n        }\n\n        segmentTimeline.S = segments;\n        segmentTimeline.S_asArray = segments;\n\n        return segmentTimeline;\n    }\n\n    function getKIDFromProtectionHeader(protectionHeader) {\n        let prHeader,\n            wrmHeader,\n            xmlReader,\n            KID;\n\n        // Get PlayReady header as byte array (base64 decoded)\n        prHeader = BASE64.decodeArray(protectionHeader.firstChild.data);\n\n        // Get Right Management header (WRMHEADER) from PlayReady header\n        wrmHeader = getWRMHeaderFromPRHeader(prHeader);\n\n        // Convert from multi-byte to unicode\n        wrmHeader = new Uint16Array(wrmHeader.buffer);\n\n        // Convert to string\n        wrmHeader = String.fromCharCode.apply(null, wrmHeader);\n\n        // Parse <WRMHeader> to get KID field value\n        xmlReader = (new DOMParser()).parseFromString(wrmHeader, 'application/xml');\n        KID = xmlReader.querySelector('KID').textContent;\n\n        // Get KID (base64 decoded) as byte array\n        KID = BASE64.decodeArray(KID);\n\n        // Convert UUID from little-endian to big-endian\n        convertUuidEndianness(KID);\n\n        return KID;\n    }\n\n    function getWRMHeaderFromPRHeader(prHeader) {\n        let length,\n            recordCount,\n            recordType,\n            recordLength,\n            recordValue;\n        let i = 0;\n\n        // Parse PlayReady header\n\n        // Length - 32 bits (LE format)\n        length = (prHeader[i + 3] << 24) + (prHeader[i + 2] << 16) + (prHeader[i + 1] << 8) + prHeader[i];\n        i += 4;\n\n        // Record count - 16 bits (LE format)\n        recordCount = (prHeader[i + 1] << 8) + prHeader[i];\n        i += 2;\n\n        // Parse records\n        while (i < prHeader.length) {\n            // Record type - 16 bits (LE format)\n            recordType = (prHeader[i + 1] << 8) + prHeader[i];\n            i += 2;\n\n            // Check if Rights Management header (record type = 0x01)\n            if (recordType === 0x01) {\n\n                // Record length - 16 bits (LE format)\n                recordLength = (prHeader[i + 1] << 8) + prHeader[i];\n                i += 2;\n\n                // Record value => contains <WRMHEADER>\n                recordValue = new Uint8Array(recordLength);\n                recordValue.set(prHeader.subarray(i, i + recordLength));\n                return recordValue;\n            }\n        }\n\n        return null;\n    }\n\n    function convertUuidEndianness(uuid) {\n        swapBytes(uuid, 0, 3);\n        swapBytes(uuid, 1, 2);\n        swapBytes(uuid, 4, 5);\n        swapBytes(uuid, 6, 7);\n    }\n\n    function swapBytes(bytes, pos1, pos2) {\n        let temp = bytes[pos1];\n        bytes[pos1] = bytes[pos2];\n        bytes[pos2] = temp;\n    }\n\n\n    function createPRContentProtection(protectionHeader) {\n\n        let contentProtection = {};\n        let pro;\n\n        pro = {\n            __text: protectionHeader.firstChild.data,\n            __prefix: 'mspr'\n        };\n\n        contentProtection.schemeIdUri = 'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95';\n        contentProtection.value = 'com.microsoft.playready';\n        contentProtection.pro = pro;\n        contentProtection.pro_asArray = pro;\n\n        return contentProtection;\n    }\n\n    function processManifest(xmlDoc, manifestLoadedTime) {\n        let manifest = {};\n        let contentProtections = [];\n        let smoothStreamingMedia = xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];\n        let protection = xmlDoc.getElementsByTagName('Protection')[0];\n        let protectionHeader = null;\n        let period,\n            adaptations,\n            contentProtection,\n            KID,\n            realDuration,\n            firstSegment,\n            lastSegment,\n            adaptationTimeOffset,\n            i;\n\n        // Set manifest node properties\n        manifest.protocol = 'MSS';\n        manifest.profiles = 'urn:mpeg:dash:profile:isoff-live:2011';\n        manifest.type = smoothStreamingMedia.getAttribute('IsLive') === 'TRUE' ? 'dynamic' : 'static';\n        manifest.timeShiftBufferDepth = parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.mediaPresentationDuration = (parseFloat(smoothStreamingMedia.getAttribute('Duration')) === 0) ? Infinity : parseFloat(smoothStreamingMedia.getAttribute('Duration')) / TIME_SCALE_100_NANOSECOND_UNIT;\n        manifest.minBufferTime = mediaPlayerModel.getStableBufferTime();\n\n        // In case of live streams, set availabilityStartTime property according to DVRWindowLength\n        if (manifest.type === 'dynamic') {\n            manifest.availabilityStartTime = new Date(manifestLoadedTime.getTime() - (manifest.timeShiftBufferDepth * 1000));\n        }\n\n        // Map period node to manifest root node\n        manifest.Period = mapPeriod(smoothStreamingMedia);\n        manifest.Period_asArray = [manifest.Period];\n\n        // Initialize period start time\n        period = manifest.Period;\n        period.start = 0;\n\n        // ContentProtection node\n        if (protection !== undefined) {\n            protectionHeader = xmlDoc.getElementsByTagName('ProtectionHeader')[0];\n\n            // Some packagers put newlines into the ProtectionHeader base64 string, which is not good\n            // because this cannot be correctly parsed. Let's just filter out any newlines found in there.\n            protectionHeader.firstChild.data = protectionHeader.firstChild.data.replace(/\\n|\\r/g, '');\n\n            // Get KID (in CENC format) from protection header\n            KID = getKIDFromProtectionHeader(protectionHeader);\n\n            // Create ContentProtection for PlayReady\n            contentProtection = createPRContentProtection(protectionHeader);\n            contentProtection['cenc:default_KID'] = KID;\n            contentProtections.push(contentProtection);\n\n            manifest.ContentProtection = contentProtections;\n            manifest.ContentProtection_asArray = contentProtections;\n        }\n\n        adaptations = period.AdaptationSet_asArray;\n        for (i = 0; i < adaptations.length; i += 1) {\n            // In case of VOD streams, check if start time is greater than 0.\n            // Therefore, set period start time to the higher adaptation start time\n            if (manifest.type === 'static' && adaptations[i].contentType !== 'text') {\n                firstSegment = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0];\n                lastSegment = adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray.length - 1];\n                adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n                adaptationTimeOffset = parseFloat(firstSegment.t) / TIME_SCALE_100_NANOSECOND_UNIT;\n                period.start = (period.start === 0) ? adaptationTimeOffset : Math.max(period.start, adaptationTimeOffset);\n                //get last segment start time, add the duration of this last segment\n                realDuration = parseFloat(((lastSegment.t + lastSegment.d) / TIME_SCALE_100_NANOSECOND_UNIT).toFixed(3));\n                //detect difference between announced duration (in MSS manifest) and real duration => in any case, we want that the video element sends the ended event.\n                //set the smallest value between all the adaptations\n                if (!isNaN(realDuration) && realDuration < manifest.mediaPresentationDuration) {\n                    manifest.mediaPresentationDuration = realDuration;\n                    period.duration = realDuration;\n                }\n            } else {\n                adaptations[i].SegmentTemplate.initialization = '$Bandwidth$';\n            }\n\n            // Propagate content protection information into each adaptation\n            if (manifest.ContentProtection !== undefined) {\n                adaptations[i].ContentProtection = manifest.ContentProtection;\n                adaptations[i].ContentProtection_asArray = manifest.ContentProtection_asArray;\n            }\n        }\n\n        // Delete Content Protection under root manifest node\n        delete manifest.ContentProtection;\n        delete manifest.ContentProtection_asArray;\n\n        return manifest;\n    }\n\n    function parseDOM(data) {\n\n        let xmlDoc = null;\n\n        if (window.DOMParser) {\n            try {\n                let parser = new window.DOMParser();\n\n                xmlDoc = parser.parseFromString(data, 'text/xml');\n                if (xmlDoc.getElementsByTagName('parsererror').length > 0) {\n                    throw new Error('Error parsing XML');\n                }\n            } catch (e) {\n                errorHandler.manifestError('parsing the manifest failed', 'parse', data, e);\n                xmlDoc = null;\n            }\n        }\n\n        return xmlDoc;\n    }\n\n\n    function internalParse(data) {\n        let xmlDoc = null;\n        let manifest = null;\n\n        const startTime = window.performance.now();\n\n        // Parse the MSS XML manifest\n        xmlDoc = parseDOM(data);\n\n        const xmlParseTime = window.performance.now();\n\n        if (xmlDoc === null) {\n            return null;\n        }\n\n        // Convert MSS manifest into DASH manifest\n        manifest = processManifest(xmlDoc, new Date());\n\n        const mss2dashTime = window.performance.now();\n\n        log('Parsing complete: (xmlParsing: ' + (xmlParseTime - startTime).toPrecision(3) + 'ms, mss2dash: ' + (mss2dashTime - xmlParseTime).toPrecision(3) + 'ms, total: ' + ((mss2dashTime - startTime) / 1000).toPrecision(3) + 's)');\n\n        return manifest;\n    }\n\n    instance = {\n        parse: internalParse\n    };\n\n    setup();\n\n    return instance;\n}\n\nMssParser.__dashjs_factory_name = 'MssParser';\nexport default FactoryMaker.getClassFactory(MssParser);","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase';\n/**\n * @class\n *\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor () {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n        * Triggered when there is an error from the element or MSE source buffer.\n        * @event MediaPlayerEvents#ERROR\n        */\n        this.ERROR = 'error';\n\n        /**\n        * Triggered when a fragment download has completed.\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n        */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n        /**\n        * Triggered when a fragment download has started.\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n        */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n        /**\n        * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n        * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n        */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n        /**\n         * Triggered when {@link module:Debug} log method is called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n        //TODO refactor with internal event\n        /**\n         * Triggered when the manifest load is complete\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n        /**\n         * Triggered when a new period starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered when an ABR up /down switch is initialed; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the stream is setup and ready.\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\n\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\n\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\n\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\n\nfunction ErrorHandler() {\n\n    let instance;\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    // \"mediasource\"|\"mediakeys\"\n    function capabilityError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\n    }\n\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\n    function downloadError(id, url, request) {\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\n    }\n\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\n    function manifestError(message, id, manifest, err) {\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\n    }\n\n    // {message: '', id: 'parse', cc: ''}\n    function timedTextError(message, id, ccContent) {\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\n    }\n\n    function mediaSourceError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\n    }\n\n    function mediaKeySessionError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\n    }\n\n    function mediaKeyMessageError(err) {\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\n    }\n\n    instance = {\n        capabilityError: capabilityError,\n        downloadError: downloadError,\n        manifestError: manifestError,\n        timedTextError: timedTextError,\n        mediaSourceError: mediaSourceError,\n        mediaKeySessionError: mediaKeySessionError,\n        mediaKeyMessageError: mediaKeyMessageError\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\n\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\n\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.mediaInfo = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representationId = null;\n    }\n}\n\nexport default DataChunk;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor() {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.startTime = NaN;\n        this.mediaType = null;\n        this.mediaInfo = null;\n        this.type = null;\n        this.duration = NaN;\n        this.timescale = NaN;\n        this.range = null;\n        this.url = null;\n        this.serviceLocation = null;\n        this.requestStartDate = null;\n        this.firstByteDate = null;\n        this.requestEndDate = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.availabilityStartTime = null;\n        this.availabilityEndTime = null;\n        this.wallStartTime = null;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.responseType = 'arraybuffer';\n        this.representationId = null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in milliseconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n */\nclass HTTPRequestTrace {\n    /**\n    * @class\n    */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport { HTTPRequest, HTTPRequestTrace };\n"]}